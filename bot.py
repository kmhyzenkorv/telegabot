import telebot
import psycopg2
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime, timedelta

# –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞
API_TOKEN = ''

DB_CONFIG = {
    "dbname": "postgres",
    "user": "postgres",
    "password": "root",
    "host": "localhost",
    "port": 5432
}

bot = telebot.TeleBot(API_TOKEN)

DAYS = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
for day in DAYS:
    keyboard.add(KeyboardButton(day.capitalize()))
keyboard.add(KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏"))
keyboard.add(KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏"))

def get_full_schedule_for_day(day, week_type):
    query = """
    SELECT t.time, t.room_numb, t.subject, te.full_name
    FROM timetable t
    LEFT JOIN teacher te ON t.subject = te.subject
    WHERE LOWER(t.day) = LOWER(%s) AND (t.week = %s OR t.week = '–û–±—â–∞—è')
    ORDER BY t.time;
    """
    try:
        connection = psycopg2.connect(**DB_CONFIG)
        cursor = connection.cursor()
        print(f"–ó–∞–ø—Ä–æ—Å: {day}, {week_type}")  # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
        cursor.execute(query, (day, week_type))
        rows = cursor.fetchall()
        cursor.close()
        connection.close()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {rows}")  # –õ–æ–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        return rows
    except psycopg2.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞:\n{e}")
        return []

def get_schedule_for_week(week_offset):
    current_date = datetime.now()
    if week_offset == 0:  # –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è
        start_date = current_date - timedelta(days=current_date.weekday())
        week_type = '–í–µ—Ä—Ö–Ω—è—è'
    else:  # –°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è
        start_date = current_date + timedelta(days=(7 - current_date.weekday()))
        week_type = '–ù–∏–∂–Ω—è—è'

    full_schedule = []
    for i in range(6):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–Ω—å
        single_day = start_date + timedelta(days=i)
        day = single_day.strftime("%A").lower()
        day_ru = {
            "monday": "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            "tuesday": "–≤—Ç–æ—Ä–Ω–∏–∫",
            "wednesday": "—Å—Ä–µ–¥–∞",
            "thursday": "—á–µ—Ç–≤–µ—Ä–≥",
            "friday": "–ø—è—Ç–Ω–∏—Ü–∞",
            "saturday": "—Å—É–±–±–æ—Ç–∞",
        }.get(day)

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–Ω—è
        schedule = get_full_schedule_for_day(day_ru, week_type)
        full_schedule.append(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_ru.capitalize()}:\n")

        if schedule:
            for row in schedule:
                time, room, subject, teacher = row
                full_schedule.append(
                    f"‚è∞ {time}\nüìö {subject}\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {teacher or '–ù–µ —É–∫–∞–∑–∞–Ω'}\nüö™ –ê—É–¥–∏—Ç–æ—Ä–∏—è: {room}\n\n"
                )
        else:
            full_schedule.append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n\n")

    return "\n".join(full_schedule)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã 607-12.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n"
        "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.",
        reply_markup=keyboard
    )

@bot.message_handler(func=lambda message: message.text.lower() in [day.lower() for day in DAYS])
def send_schedule(message):
    day = message.text.lower()
    full_schedule = get_full_schedule_for_day(day, '–í–µ—Ä—Ö–Ω—è—è')

    if not full_schedule:
        bot.send_message(message.chat.id, f"üö´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day.capitalize()} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
    else:
        result = f"üìÖ **–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day.capitalize()}**:\n\n"  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º

        for row in full_schedule:
            time, room, subject, teacher = row
            result += (
                f"*********************************\n"  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
                f"‚è∞ –í—Ä–µ–º—è: {time}\n"
                f"üìö –ü—Ä–µ–¥–º–µ—Ç: {subject}\n"
                f"üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {teacher or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"üö™ –ê—É–¥–∏—Ç–æ—Ä–∏—è: {room}\n"
                f"*********************************\n\n"  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
            )

        bot.send_message(message.chat.id, result)

@bot.message_handler(func=lambda message: message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏")
def send_current_week_schedule(message):
    schedule = get_schedule_for_week(0)
    bot.send_message(message.chat.id, schedule)

@bot.message_handler(func=lambda message: message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏")
def send_next_week_schedule(message):
    schedule = get_schedule_for_week(1)
    bot.send_message(message.chat.id, schedule)

@bot.message_handler(commands=['week'])
def check_week_type(message):
    current_date = datetime.now()
    current_weekday = current_date.weekday()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 6 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ (–∑–∞–º–µ–Ω–∏—Ç–µ –ª–æ–≥–∏–∫—É –Ω–∞ –≤–∞—à—É –∞–∫—Ç—É–∞–ª—å–Ω—É—é)
    week_type = '–í–µ—Ä—Ö–Ω—è—è' if (current_weekday // 7) % 2 == 0 else '–ù–∏–∂–Ω—è—è'

    bot.send_message(message.chat.id, f"üîç –°–µ–≥–æ–¥–Ω—è {current_date.strftime('%Y-%m-%d')} –∏ —ç—Ç–æ {week_type} –Ω–µ–¥–µ–ª—è.")

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - –£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å\n"
        "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏ - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é\n"
        "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏ - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é\n"
        "/week - –£–∑–Ω–∞—Ç—å, –∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è —Å–µ–π—á–∞—Å (–≤–µ—Ä—Ö–Ω—è—è –∏–ª–∏ –Ω–∏–∂–Ω—è—è)"
    )
    bot.send_message(message.chat.id, help_text)

# –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
if __name__ == "__main__":
    print("Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
